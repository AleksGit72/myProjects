"""
Cловари определяются как наборы пар «ключ — значение», разделенные запятыми.
Все последовательно перечисляемые элементы должны разделяться запятыми.

СИНТАКСИС:
словарь = {ключ: значение, ключ: значение, ...}
"""

# пустой словарь
my_dict = {}
print("пустой словарь ", my_dict)

# словарь с ключами — целочисленными значениями
my_dict = {1: 'яблоко', 2: 'мяч'}
print("словарь с ключами — целочисленными значениями ", my_dict)

# словарь с ключами разных типов
my_dict = {'имя': 'Джон', 1: [2, 4, 3]}
print("словарь с ключами разных типов ", my_dict)

# используем dict()
my_dict = dict({1:'яблоко', 2:'мяч'})
print("используем dict() ", my_dict)

# словарь из последовательности, где элементы являются парами
my_dict = dict([(1,'яблоко'), (2,'мяч')])
print("словарь из последовательности, где элементы являются парами ", my_dict)

# вложенныe словари, то есть словари, которые являются элементами других словарей:
capitals = {'USA': 'Washington', 'Russia':'Moscow', 'China': 'Beijing', 'Australia': {'Australia': 'Canberra', 'New_Zealand': 'Wellington'}}
print("вложенныe словари ", capitals)

# get vs. [] для получения элементов
my_dict = {'Имя': 'Ваня', 'Возраст': 26}

# Вывод: Ваня c помощью []
print(my_dict['Имя'])

# Вывод: 26 методом .get()
print(my_dict.get('Возраст'))

# Попытка получить ключ, которого не существует, приводит к ошибке
# Вывод: None
# print(my_dict.get('Адрес'))

# KeyError
# print(my_dict['Адрес'])

"""
Словари — изменяемый тип данных. 
Это значит, что в него можно добавить новые элементы или изменить уже существующие с помощью оператора присваивания.

Если добавляемый ключ есть в словаре, значение элемента изменяется. 
Если же такого ключа еще нет, то в словарь добавляется новая пара (ключ: значение).
"""
# Изменение словаря
my_dict = {'Имя': 'Ваня', 'Возраст': 26}

# обновляем значение для 'Возраст'
my_dict['Возраст'] = 27

# Вывод: {'Возраст': 27, 'Имя': 'Ваня'}
print(my_dict)

# добавляем элемент
my_dict['Адрес'] = 'Центр города'

# Вывод: {'Адрес': 'Центр города', 'Возраст': 27, 'Имя': 'Ваня'}
print(my_dict)

"""
УДАЛЕНИЕ в словаре

1.  метод pop() 
    Этот метод удаляет элемент с соответствующим ключом и возвращает значение.

2.  метода popitem() 
    Удаляет произвольную пару (ключ, значение)

3.  метода clear()
    Очистит весь словарь за один раз.

4.  ключевое слово del
    Для удаления отдельных элементов или же всего словаря.
"""
# создаем словарь
squares = {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}

# удаляет определенный элемент, возвращает его значение
# Вывод: 16
print(squares.pop(4))

# Вывод: {1: 1, 2: 4, 3: 9, 5: 25}
print(squares)

# удаляет произвольный элемент, возвращает (ключ, эзначение)
# Вывод: (5, 25)
print(squares.popitem())

# Вывод: {1: 1, 2: 4, 3: 9}
print(squares)

# удаляет все элементы
squares.clear()

# Вывод: {}
print(squares)

# удаляет весь словарь
del squares

# выдает ошибку
print(squares)