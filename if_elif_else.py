"""
Если требуется проверить несколько условий, в языке Python используется каскадный условный оператор

Синтаксис:
if условие1:
    блок кода
elif условие2:
    блок кода
...
else:
    блок кода

Пример 1. Даны три целых числа. Определите, сколько среди них совпадающих. Программа должна вывести одно из чисел: 
3 (если все совпадают), 
2 (если два совпадает) или 
0 (если все числа различны).

a, b, c = int(input()), int(input()), int(input())
if a == b == c:
    print(3)
elif a == b or b == c or a == c:
    print(2)
else:
    print(0)

#  Пример 2: Калькулятор арифметический для двух чисел

a, b, c = int(input('первое число = ')), int(input('второе число = ')), input('операция: ')
if  c == '+':
    print('Результат:', a + b)
elif c == '-':
    print('Результат:', a - b)
elif c == '*':
    print('Результат:', a * b)
elif c == '/':
    if b != 0:
        print('Результат:', a / b)
    else:
        print('На ноль делить нельзя!')
else:
    print('Неверная операция')


#  Пример 3: Рулетка чет/нечет
n = int(input())
if n == 0:
    print('зеленый')
elif 1 <= n <= 10 or 19 <= n <= 28:
    if  n % 2 == 0:
        print('черный')
    else:
        print('красный')
elif 11 <= n <= 18 or 29 <= n <= 36:
    if  n % 2 == 0:
        print('красный')
    else:
        print('черный')
else:
    print('ошибка ввода')
"""
# Задача на пересечение двух отрезков
"""

Есть короткий алгоритм: заводим переменные для концов отрезка пересечения (a3 и b3).
Cначала присваиваем левому концу a3 большее из двух данных левых концов промежутков. 
Потом правому концу b3 присвоим значение меньшего из двух правых концов данных промежутков. 
Останется сравнить полученные концы между собой: 
Если равны - точка, если левый конец меньше правого - отрезок, а иначе - пустое множество
"""
a1, b1, a2, b2, = int(input()), int(input()), int(input()), int(input())
if a2 > a1:
    a3 = a2
else:
    a3 = a1
if b2 > b1:
    b3 = b1
else:
    b3 = b2
if a3 == b3:
    print(a3)
elif a3 < b3:
    print(a3, b3)
else:
    print('пустое множество')

